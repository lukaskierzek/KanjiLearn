// <auto-generated />
using System;
using KanjiLearn.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanjiLearn.Server.Migrations
{
    [DbContext(typeof(KanjiLearnContext))]
    [Migration("20240127190632_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KanjiLearn.Server.Models.Kanji", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("Strokes")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Kanji");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Character = "人",
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7508),
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7510),
                            Strokes = 2,
                            Translation = "Człowiek"
                        },
                        new
                        {
                            Id = 2,
                            Character = "日",
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7512),
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7513),
                            Strokes = 4,
                            Translation = "Dzień, słońce"
                        });
                });

            modelBuilder.Entity("KanjiLearn.Server.Models.Readings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KanjiId")
                        .HasColumnType("int");

                    b.Property<string>("Kunyomi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Onyomi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId")
                        .IsUnique()
                        .HasFilter("[KanjiId] IS NOT NULL");

                    b.ToTable("Readings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7674),
                            KanjiId = 1,
                            Kunyomi = "ジン、ニン",
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7675),
                            Onyomi = "ひと"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7678),
                            KanjiId = 2,
                            Kunyomi = "ニチ、 ジツ",
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7678),
                            Onyomi = "ひ、び"
                        });
                });

            modelBuilder.Entity("KanjiLearn.Server.Models.Sentences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KanjiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReadingKanjiInSentence")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sentence")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SentenceKanji")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TranslationReadingKanjiInSentence")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("KanjiId");

                    b.ToTable("Sentences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7703),
                            KanjiId = 1,
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7704),
                            ReadingKanjiInSentence = "ひと",
                            Sentence = "この人はにほんじんです。",
                            SentenceKanji = "人",
                            Translation = "Ten człowiek jest Japończykiem.",
                            TranslationReadingKanjiInSentence = "człowiek"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7707),
                            KanjiId = 1,
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7708),
                            ReadingKanjiInSentence = "ひとびと",
                            Sentence = "なぜ人々はほんをよみますか。",
                            SentenceKanji = "人々",
                            Translation = "Dlaczego ludzie czytają książki?",
                            TranslationReadingKanjiInSentence = "ludzie"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7710),
                            KanjiId = 2,
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7710),
                            ReadingKanjiInSentence = "ひ",
                            Sentence = "ほんとうにいい日でした",
                            SentenceKanji = "日",
                            Translation = "Ten dzień był naprawdę dobry.",
                            TranslationReadingKanjiInSentence = "dzień"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7712),
                            KanjiId = 2,
                            LastModified = new DateTime(2024, 1, 27, 19, 6, 31, 788, DateTimeKind.Utc).AddTicks(7713),
                            ReadingKanjiInSentence = "ひび",
                            Sentence = "ともだちとあうとき、むかしの日々をおもいだします。",
                            SentenceKanji = "日々",
                            Translation = "Gdy spotykam się z przyjacielem, przypominają mi się dawne czasy.",
                            TranslationReadingKanjiInSentence = "codziennie, dni"
                        });
                });

            modelBuilder.Entity("KanjiLearn.Server.Models.Readings", b =>
                {
                    b.HasOne("KanjiLearn.Server.Models.Kanji", "Kanji")
                        .WithOne("Readings")
                        .HasForeignKey("KanjiLearn.Server.Models.Readings", "KanjiId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Kanji");
                });

            modelBuilder.Entity("KanjiLearn.Server.Models.Sentences", b =>
                {
                    b.HasOne("KanjiLearn.Server.Models.Kanji", "Kanji")
                        .WithMany("Sentences")
                        .HasForeignKey("KanjiId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Kanji");
                });

            modelBuilder.Entity("KanjiLearn.Server.Models.Kanji", b =>
                {
                    b.Navigation("Readings");

                    b.Navigation("Sentences");
                });
#pragma warning restore 612, 618
        }
    }
}
